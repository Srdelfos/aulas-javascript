/* Fun√ß√µes de acesso e manipla√ß√£o do DOM 

- querySelector() √© uma fun√ß√£o para selecionar UM √öNICO elemento na p√°gina (DOM).

- querySelectorAll() √© uma fun√ß√£o para selecionar V√ÅRIOS elementos na p√°gina (DOM).

Nos dois casos, a sele√ß√£o √© feita usando seletores comuns ao que fazemos no CSS.*/

/* Exemplos */
const titulo = document.querySelector("h1");
const textoDom = document.querySelector(".texto-dom");
const subTitulos = document.querySelectorAll("h2");
const varios = document.querySelectorAll("p, img, button");
console.log(varios);

/* Modificando elementos no DOM */
titulo.textContent = "Ol√° JavaScript!";
textoDom.innerHTML = "<i>O Marcio ser√° reprovado!</i>";

/* Selecionar todos os links da lista de refer√™ncias e colocar neles o atributo target valendo_blank. */

const links = document.querySelectorAll(".lista-de-referencias a");
console.log(links);

/* Se fosse um por um
links[0].setAttribute("target", "_blank"); */
 
// Fa√ßa a mesma coisa usando o for/of

for (const link of links) {
    // Vers√£o 1 (moderna, vale para qualquer atributo)(usando atributo via propriedade)
    link.setAttribute("target", "_blank");
    
    /* vers√£o 2 (usando atributo via propriedade) mais antiga, vale para atributos nativos do HTML 
    link.target = '_blank';   
     */
}

/* Manipulando Eventos */
const ex1 = document.querySelector("#exemplo01");

/* Poderiamos tamt√©m usar a fun√ß√£o getelementByid em vez do querySelector. A diferen√ßa √© que ela s√≥ funciona para sele√ß√£o atrav√©s do ID. Obs.: ao us√°-la N√ÇO COLOQUE #.   
const ex1 = document.getElementById("exemplo01");*/

const msg = document.querySelector("#mensagem");
const pagina = document.querySelector("body");

/* Fun√ß√£o Ouvinte de Evento (Event Listener) - aplicando ao elemento ALVO do evento desejado("click") e uma fun√ß√£o para executar as a√ß√µes a partir do evento. Obs.: esta fun√ß√£o √© considerada do tipo "an√¥nima" e √© conhecida como "callback". */
ex1.addEventListener("click", function(){
    /* Acessamos o par√°grafo vazio e colocamos um conte√∫do dentro dele*/
    msg.innerHTML = "Ol√° üòò!";

    /* Modificar a p√°gina alterando a fonte (CSS via JS) */
    pagina.style.fontFamily = "Verdana";
})

/* Ouvinte de evento para voltar ao normal (sem texto no par√°grafo e com fonte padr√£o na p√°gina). O evento ocorrer√° ao clicar DUAS VEZES no par√°grafo da mensagem */
msg.addEventListener("dblclick", function(){
    msg.innerHTML = ""; // Remove o conte√∫do do par√°grafo
    pagina.style.fontFamily = "initial"; // Voltando para fonte padr√£o
});

 /* Exemplo 02: modo noturno*/
 const botaoAtivar = document.querySelector("#ativar");
 botaoAtivar.addEventListener("click", function(){
    /* Usamos o toggle do classList para alternar a aplica√ß√£o/remo√ß√£o da classe "noturno". Na pr√°tica, vira um liga/desliga. */
    pagina.classList.toggle("noturno");
    pagina.style.transition = '.4s'

 /* DESAFIO: Trocar o texto do bot√£o.
 Se a p√°gina estiver com a classe "noturno" aplicada, o bot√£o deve mostrar a palavra "Desativar". Caso contr√°rio, deve mostrar a palavra "Ativar". Use if/else! */

//  if (pagina.classList == "noturno"){
//     botaoAtivar.innerHTML = "Desativar"
//  } else {
//     botaoAtivar.innerHTML = "Ativar"
//  }

 if (pagina.classList.contains("noturno")){
    botaoAtivar.innerHTML = "Desativar"
 } else {
    botaoAtivar.innerHTML = "Ativar"
 }
 });

 /* Sobre o duplo e o triplo valor de igual */

 let a = "10";
 let b = 10;
 let resultado = a === b;
 console.log(resultado);

 // == Compara VALORES
 // === Compara VALORES E TIPO DE DADO
 





